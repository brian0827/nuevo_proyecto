COMANDOS GIT

PARA TRABAJAR DE FORMA LOCAL

- crear un nuevo repositorio local: git init
- indicar que se ha modificado un archivo: git add nombre.archivo
- hacer commit a los cambios que realizo: git commit (agregar dentro la descripcion de los cambios que se realizaron)
- ver que cambios se realizaron: git diff
- comparar cambios que se realizaron: git diff 'hash commit 1' 'hash commit 2'
- ver el historial de commits: git log
- ver un resumen de los commits: git log --oneline
- ver resumen de los commit identificando sus ramas: git log --online --decorate --graph --all
- revertir cambios: git checkout -- nombre.archivo
- revertir todos los cambios de un commit: git revert 'hash del commit'

RAMAS EN EL REPOSITORIO
- ver lista de ramas creadas: git branch
- crear un nuevo branch: git branch nombre_nuevo
- cambiar de rama: git checkout nombre_rama
- crear y cambiar a nueva rama: git checkout -b nombre_nueva_rama
- cambiar nombre de una rama: git branch -m nombre_antiguo nombre_nuevo
-eliminar rama: git branch -d nombre_rama

- limpiar consola de comandos: clear

MERGE 
-para fusionar un commit con otro (unir dos codigos): git merge nombre_commit
-cuando existan conflictos sedeben verificar los archivos y dejar lo que mas convenga
-abortar la fusion de los codigos cuando se presentan conflictos: git merge --abort

CREAR ATAJOS PARA ACCEDER MAS RAPIDO A LOS COMANDOS MAS USADOS
- atajo para acceder a un comando recurente: git condig --gloabl alias.nombre_del_alias 'comando que queremos guardar'

CREAR TAG
-identificar commits en el repositorio: git tag v#.#.# num_commit
- eliminar tag: git tag -d v#.#.#

REMOTOS
-